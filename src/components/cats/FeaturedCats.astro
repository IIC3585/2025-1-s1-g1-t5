---
export interface Props {
  cats: any[];
}

const { cats } = Astro.props;
---

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
  {cats.map((cat) => (
    <div class="bg-gray-100 border border-gray-300 group cursor-pointer transform hover:scale-105 transition-all duration-300 hover:glow-effect rounded-2xl overflow-hidden">
      <a href={`/cats/${cat.id}`} class="block">
        <div class="aspect-square overflow-hidden">
          <img 
            src={cat.data.url} 
            alt={`Gato ${cat.id}`}
            class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
            loading="lazy"
          />
        </div>
        <div class="p-6">
          <h3 class="text-xl font-semibold text-gray-800 mb-2 group-hover:text-sky-600 transition-colors">
            Gato #{cat.id}
          </h3>
          <p class="text-gray-600 mb-4">
            {cat.data.width} x {cat.data.height} px
          </p>
          <div class="flex justify-between items-center">
            <span class="glass-effect bg-gray-50 px-3 py-1 rounded-full text-sm text-sky-600 border border-gray-300">
              {cat.data.url.includes('.gif') ? 'GIF' : 'IMG'}
            </span>
            <span class="text-sky-600 text-sm font-medium group-hover:text-sky-800 transition-colors">
              Ver detalles â†’
            </span>
          </div>
        </div>
      </a>
    </div>
  ))}
</div>