---
import TestimonialCard from "@/components/intro/islands/testimonialCard";
import Counter from "@/components/intro/islands/counter.svelte";
import Accordion from "@/components/intro/islands/accordion.vue";
import { testimonials } from "@/constants/intro";
---

<section class="py-20 bg-slate-800/50">
  <div class="container mx-auto px-6">
    <div class="text-center mb-16">
      <h2 class="text-5xl font-bold text-white mb-6">
        Ejemplos Justificados de Islands
      </h2>
      <p class="text-xl text-blue-200 max-w-4xl mx-auto">
        Cada isla demuestra un caso de uso específico que justifica la
        hidratación
      </p>
    </div>

    <!-- React Example -->
    <div class="mb-20">
      <div
        class="bg-gradient-to-r from-blue-900/30 to-blue-800/30 rounded-2xl p-8 mb-8 border border-blue-500/20"
      >
        <div
          class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6"
        >
          <div class="flex items-center gap-4">
            <div
              class="flex items-center gap-3 bg-blue-600/30 rounded-full px-6 py-3"
            >
              <span class="text-3xl">⚛️</span>
              <span class="text-white font-bold text-lg">React Island</span>
              <code
                class="bg-blue-700/50 text-blue-200 px-3 py-1 rounded-lg text-sm"
                >client:load</code
              >
            </div>
          </div>
          <div class="flex-1 lg:max-w-2xl">
            <h4 class="text-xl font-bold text-white mb-3">
              Justificación Técnica:
            </h4>
            <p class="text-blue-100 mb-2">
              Los testimonials requieren interactividad inmediata para
              navegación y feedback visual
            </p>
            <p class="text-cyan-300 font-semibold">
              Beneficio: UX fluida sin comprometer el renderizado estático del
              resto
            </p>
          </div>
        </div>
      </div>
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {
          testimonials.map((testimonial) => (
            <TestimonialCard {...testimonial} client:load />
          ))
        }
      </div>
    </div>

    <!-- Svelte Example -->
    <div class="mb-20">
      <div
        class="bg-gradient-to-r from-orange-900/30 to-red-800/30 rounded-2xl p-8 mb-8 border border-orange-500/20"
      >
        <div
          class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6"
        >
          <div class="flex items-center gap-4">
            <div
              class="flex items-center gap-3 bg-orange-600/30 rounded-full px-6 py-3"
            >
              <span class="text-3xl">🔥</span>
              <span class="text-white font-bold text-lg">Svelte Island</span>
              <code
                class="bg-orange-700/50 text-orange-200 px-3 py-1 rounded-lg text-sm"
                >client:load</code
              >
            </div>
          </div>
          <div class="flex-1 lg:max-w-2xl">
            <h4 class="text-xl font-bold text-white mb-3">
              Justificación Técnica:
            </h4>
            <p class="text-orange-100 mb-2">
              El contador necesita estado reactivo y animaciones en tiempo real
            </p>
            <p class="text-yellow-300 font-semibold">
              Beneficio: Bundle mínimo (Svelte compila a vanilla JS) con máxima
              reactividad
            </p>
          </div>
        </div>
      </div>
      <div class="flex justify-center">
        <Counter client:load />
      </div>
    </div>

    <!-- Vue Example -->
    <div class="mb-20">
      <div
        class="bg-gradient-to-r from-green-900/30 to-emerald-800/30 rounded-2xl p-8 mb-8 border border-green-500/20"
      >
        <div
          class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6"
        >
          <div class="flex items-center gap-4">
            <div
              class="flex items-center gap-3 bg-green-600/30 rounded-full px-6 py-3"
            >
              <span class="text-3xl">💚</span>
              <span class="text-white font-bold text-lg">Vue Island</span>
              <code
                class="bg-green-700/50 text-green-200 px-3 py-1 rounded-lg text-sm"
                >client:load</code
              >
            </div>
          </div>
          <div class="flex-1 lg:max-w-2xl">
            <h4 class="text-xl font-bold text-white mb-3">
              Justificación Técnica:
            </h4>
            <p class="text-green-100 mb-2">
              El acordeón requiere manejo de estado complejo para múltiples
              secciones
            </p>
            <p class="text-emerald-300 font-semibold">
              Beneficio: Composición API de Vue ideal para lógica de toggles y
              animaciones
            </p>
          </div>
        </div>
      </div>
      <div class="max-w-4xl mx-auto">
        <Accordion client:load />
      </div>
    </div>
  </div>
</section>
